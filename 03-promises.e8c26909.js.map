{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,UAEA,SAAuBC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OACS,IAAIC,QADTH,EACiB,CAACI,EAASC,KAC3BD,EAAQ,C,SAAEN,E,MAAUC,GAAQ,EAGX,CAACK,EAASC,KAC3BA,EAAO,C,SAAEP,E,MAAUC,GAAQ,E,EAKjCO,CAAc,EAAG,MACdC,MAAK,EAACT,SAAEA,EAAQC,MAAEA,MACjBS,EAAAZ,GAASa,OAAOC,QAAQ,uBAAqBZ,QAAiBC,MAAU,IAEzEY,OAAM,EAACb,SAAEA,EAAQC,MAAEA,MAClBS,EAAAZ,GAASa,OAAOG,QAAQ,sBAAoBd,QAAeC,MAAU","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  if (shouldResolve) {\n    return new Promise((resolve, reject) => {\n      resolve({ position, delay });\n    });\n  } else {\n    return new Promise((resolve, reject) => {\n      reject({ position, delay });\n    });\n  }\n}\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n"],"names":["$7Y9D8","parcelRequire","position","delay","shouldResolve","Math","random","Promise","resolve","reject","$47d4ff9957288465$var$createPromise","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.e8c26909.js.map"}