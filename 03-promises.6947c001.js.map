{"mappings":"iiBAAA,IAEuBA,EAAUC,EACzBC,EAHRC,EAAAC,EAAA,UAEuBJ,EAcT,EAdmBC,EAchB,KAbTC,EAAgBG,KAAKC,SAAW,GAG7B,IAAIC,QADTL,EACiB,SAACM,EAASC,GAC3BD,EAAQ,CAAER,WAAUC,S,EAGH,SAACO,EAASC,GAC3BA,EAAO,CAAET,WAAUC,S,IAMtBS,MAAK,SAAAC,G,IAAGX,EAAQW,EAARX,SAAUC,EAAKU,EAALV,MACjBW,EAAAT,GAASU,OAAOC,QAAQ,uBAAwCC,OAAff,EAAS,QAAYe,OAANd,EAAM,M,IAEvEe,OAAM,SAAAL,G,IAAGX,EAAQW,EAARX,SAAUC,EAAKU,EAALV,MAClBW,EAAAT,GAASU,OAAOI,QAAQ,sBAAqCF,OAAff,EAAS,QAAYe,OAANd,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  if (shouldResolve) {\n    return new Promise((resolve, reject) => {\n      resolve({ position, delay });\n    });\n  } else {\n    return new Promise((resolve, reject) => {\n      reject({ position, delay });\n    });\n  }\n}\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n"],"names":["position","delay","shouldResolve","$6JpON","parcelRequire","Math","random","Promise","resolve","reject","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.6947c001.js.map"}